@page "/products/{id:guid}"
@using EShopOnAbp.Localization
@using EShopOnAbp.PublicWeb.Components.Basket
@using Microsoft.Extensions.Localization
@using System.Globalization
@using Microsoft.Extensions.Options
@using Volo.Abp.GlobalFeatures
@using Volo.Abp.Http.Client
@using Volo.Abp.Users
@using Volo.CmsKit.GlobalFeatures
@using Volo.CmsKit.Public.Comments
@using Volo.CmsKit.Public.Web.Pages.CmsKit.Shared.Components.Commenting
@using Volo.CmsKit.Public.Web.Pages.CmsKit.Shared.Components.Rating

@inject IStringLocalizer<EShopOnAbpResource> L
@inject IOptions<AbpRemoteServiceOptions> options
@inject ICurrentUser CurrentUser

@model EShopOnAbp.PublicWeb.Pages.ProductDetailModel

@section styles{
    <abp-style src="/Pages/index.css" />
}

    @section scripts {
    <abp-script src="/client-proxies/basket-proxy.js" />
    <abp-script src="/Pages/index.js" />
    <abp-script src="/Pages/productDetail.js" />
}

    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-6 col-md-6 col-sm-6 ">
                <div class="product-list">
                    @{
                    var product = Model.Product;
                    var productPrice = product.Price.ToString("C", new CultureInfo("en-US"));
                    string productImage = !product.ImageName.IsNullOrEmpty() ? $"{options.Value.RemoteServices.Default.BaseUrl}product-images/{product.ImageName}" : $"{options.Value.RemoteServices.Default.BaseUrl}product-images/@product.ImageName";
                    string buyText = L["Index:AddToBasket"];
                    <div class="product-list-item" data-product-id="@product.Id.ToString()" style="cursor:auto">
                        <div class="col">
                            <div class="product-info-box">
                                <h6>@product.Name</h6>
                                <em class="d-block text-muted">@product.Code - @L["StockCount"]: @product.StockCount</em>
                            </div>
                        </div>
                        <img src="@productImage" />
                        <div class="row mt-5 ">
                            @if (product.StockCount > 0)
                            {
                                <abp-button class="add-basket-button" button-type="Warning" text="@buyText" data-product-id="@product.Id.ToString()"></abp-button>
                            }
                            else
                            {
                                <abp-button disabled="true" class="add-basket-button" button-type="Warning" text="@L["Index:OutOfStock"]" />
                            }
                            <div class="info-section col" style="text-align: center">
                                <span class="product-price">@productPrice</span>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <abp-row>
                <abp-column size-md="_6">
                    @if (GlobalFeatureManager.Instance.IsEnabled<RatingsFeature>() && Model.IsPurschased)
                    {
                        @await Component.InvokeAsync(typeof(RatingViewComponent), new {entityType = "quote", entityId = @product.Id.ToString()})
                    }
                </abp-column>
                <abp-column size-md="_12">
                    @if (GlobalFeatureManager.Instance.IsEnabled<CommentsFeature>())
                    {
                        @await Component.InvokeAsync(typeof(CommentingViewComponent), new {entityType = "quote", entityId = @product.Id.ToString()})
                    }
                </abp-column>
            </abp-row>

        </div>
    </div>
</div>